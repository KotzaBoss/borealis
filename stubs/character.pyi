from components.proficiency import Proficiency as Proficiency
from typing import Any, List, Union
from utils.enums import ABILITY
from utils.resources import Initiative as Initiative

class Character:
    def __init__(self, *, init_rolls: Any=..., items: List[ComponentCollection]=..., feats: List[ComponentCollection]=..., proficiencies: List[Proficiency]=..., name: str=...) -> None: ...
    def __eq__(self, other: Any) -> Any: ...
    def __contains__(self, item: Proficiency) -> Any: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, val: Any) -> None: ...
    @property
    def inspiration(self): ...
    @inspiration.setter
    def inspiration(self, val: Any) -> None: ...
    @property
    def proficiency(self): ...
    @proficiency.setter
    def proficiency(self, val: Any) -> None: ...
    @property
    def ac(self): ...
    @ac.setter
    def ac(self, val: Any) -> None: ...
    @property
    def initiative(self): ...
    @initiative.setter
    def initiative(self, val: Any) -> None: ...
    @property
    def speed(self): ...
    @speed.setter
    def speed(self, val: Any) -> None: ...
    @property
    def hp(self): ...
    @hp.setter
    def hp(self, val: Any) -> None: ...
    @property
    def hit_dice(self): ...
    @hit_dice.setter
    def hit_dice(self, val: Any) -> None: ...
    @property
    def feats(self): ...
    @feats.setter
    def feats(self, val: Any) -> None: ...
    @property
    def features(self): ...
    @features.setter
    def features(self, val: Any) -> None: ...
    @property
    def proficiencies(self): ...
    @proficiencies.setter
    def proficiencies(self, val: Any) -> None: ...
    @property
    def spells(self): ...
    @spells.setter
    def spells(self, val: Any) -> None: ...
    @property
    def abilities(self): ...
    @abilities.setter
    def abilities(self, val: Any) -> None: ...
    @property
    def skills(self): ...
    @skills.setter
    def skills(self, val: Any) -> None: ...
    @property
    def items(self): ...
    @items.setter
    def items(self, val: Any) -> None: ...

class Ability:
    max: int = ...
    score: Any = ...
    user_override: Any = ...
    base: Any = ...
    name: Any = ...
    def __init__(self, *, name: ABILITY=..., base: Any=...) -> None: ...
    def __eq__(self, other: Union[Ability, int]) -> Any: ...
    def __lt__(self, other: Union[Ability, int]) -> Any: ...
