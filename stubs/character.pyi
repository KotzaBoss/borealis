from components.proficiency import Proficiency as Proficiency
from typing import Any, List, Optional, Tuple

class CharacterAttribute: ...

class Dependancy:
    obj: Any = ...
    src: Any = ...
    def __init__(self, obj: Optional[Any] = ..., src: Optional[Any] = ...) -> None: ...
    def __add__(self, other: Any): ...
    def __radd__(self, other: Any): ...

class Items(CharacterAttribute, list):
    def __init__(self, *args: Any) -> None: ...

class SavingThrows(CharacterAttribute, dict):
    def __init__(self) -> None: ...

class Skills(CharacterAttribute, dict):
    def __init__(self) -> None: ...

class Abilities(CharacterAttribute, dict):
    def __init__(self, init_rolls: Optional[Any] = ...) -> None: ...

class HP(CharacterAttribute, dict):
    def __init__(self) -> None: ...

class Proficiencies(CharacterAttribute, list):
    def __init__(self, *args: Any) -> None: ...

class Spells(CharacterAttribute, list):
    def __init__(self, *args: Any) -> None: ...

class Features(CharacterAttribute, list):
    def __init__(self, *args: Any) -> None: ...

class Feats(CharacterAttribute, list):
    def __init__(self, *args: Any) -> None: ...

class Character:
    def __init__(self, *, init_rolls: List[int, int, int, int, int, int]=..., items: List[ComponentCollection]=..., feats: List[ComponentCollection]=..., proficiencies: List[Proficiency]=..., name: str=...) -> None: ...
    def __getitem__(self, key: Any): ...
    def add_item(self, *new_items: Any) -> None: ...
    def delete_item(self, del_item: Any) -> None: ...
    def check_feat_req(self, feats: Any) -> Tuple[List[Feat], List[Feat]]: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, val: Any) -> None: ...
    @property
    def inspiration(self): ...
    @inspiration.setter
    def inspiration(self, val: Any) -> None: ...
    @property
    def proficiency(self): ...
    @proficiency.setter
    def proficiency(self, val: Any) -> None: ...
    @property
    def ac(self): ...
    @ac.setter
    def ac(self, val: Any) -> None: ...
    @property
    def initiative(self): ...
    @initiative.setter
    def initiative(self, val: Any) -> None: ...
    @property
    def speed(self): ...
    @speed.setter
    def speed(self, val: Any) -> None: ...
    @property
    def hp(self): ...
    @hp.setter
    def hp(self, val: Any) -> None: ...
    @property
    def hit_dice(self): ...
    @hit_dice.setter
    def hit_dice(self, val: Any) -> None: ...
    @property
    def feats(self): ...
    @feats.setter
    def feats(self, val: Any) -> None: ...
    @property
    def features(self): ...
    @features.setter
    def features(self, val: Any) -> None: ...
    @property
    def proficiencies(self): ...
    @proficiencies.setter
    def proficiencies(self, val: Any) -> None: ...
    @property
    def spells(self): ...
    @spells.setter
    def spells(self, val: Any) -> None: ...
    @property
    def abilities(self): ...
    @abilities.setter
    def abilities(self, val: Any) -> None: ...
    @property
    def skills(self): ...
    @skills.setter
    def skills(self, val: Any) -> None: ...
    @property
    def items(self): ...
    @items.setter
    def items(self, val: Any) -> None: ...
